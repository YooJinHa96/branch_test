From C:\Users\poop4\PycharmProjects\pythonProject2\networks.py:25: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

CONFIGDIR=C:\Users\poop4\.matplotlib
(private) matplotlib data path: C:\Users\poop4\Anaconda3\envs\test_tensor\lib\site-packages\matplotlib\mpl-data
matplotlib data path: C:\Users\poop4\Anaconda3\envs\test_tensor\lib\site-packages\matplotlib\mpl-data
loaded rc file C:\Users\poop4\Anaconda3\envs\test_tensor\lib\site-packages\matplotlib\mpl-data\matplotlibrc
matplotlib version 3.2.2
interactive is False
platform is win32
loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', 'site', 'os', 'errno', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_bootlocale', '_locale', 'encodings.cp949', '_codecs_kr', '_multibytecodec', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'google', 'mpl_toolkits', 'sphinxcontrib', 'logging', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', 'string', '_string', 'threading', 'atexit', 'argparse', 'copy', 'textwrap', 'gettext', 'locale', 'struct', '_struct', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'settings', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'socket', '_socket', 'selectors', 'math', 'select', 'utils', 'datetime', '_datetime', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'ctypes', '_ctypes', 'ctypes._endian', 'mkl._mklinit', 'mkl._py_mkl_service', 'cython_runtime', 'six', '__future__', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'fnmatch', 'posixpath', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', 'hashlib', '_hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'pprint', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'gc', 'tempfile', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'data_manager', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas._typing', 'typing', 'typing.io', 'typing.re', 'pandas.compat.numpy', 'distutils', 'distutils.version', 'pandas._libs', 'pandas._libs.interval', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.tslibs', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'calendar', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.easter', 'pandas._libs.properties', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.ops_dispatch', 'pandas._libs.algos', 'pandas._libs.lib', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'inspect', 'dis', 'opcode', '_opcode', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.construction', 'pandas.core.common', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.arrays.masked', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'timeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck._pytesttester', 'bottleneck._version', 'pandas.core.array_algos', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.categorical', 'csv', '_csv', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.tseries.offsets', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.aggregation', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.times', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.generic', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.concat', 'pandas.core.internals.managers', 'pandas.core.internals.ops', 'pandas.core.shared_docs', 'pandas.io.formats.format', 'unicodedata', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.indexes.accessors', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.util.numba_', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.frame', 'pandas.core.internals.construction', 'pandas.core.reshape', 'pandas.core.reshape.melt', 'pandas.core.reshape.concat', 'pandas.core.reshape.util', 'pandas.io.formats.info', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._odswriter', 'pandas._libs.json', 'pandas.io.formats.excel', 'pandas.io.formats.css', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'agent', 'learners', 'environment', 'networks', 'tensorflow', 'tensorflow._api', 'tensorflow.python', 'tensorflow.tools', 'tensorflow.core', 'tensorflow.compiler', 'tensorflow.lite', 'tensorflow.keras', 'tensorflow.contrib', 'tensorflow.compat', 'tensorflow.summary', 'tensorflow.examples', 'tensorflow.estimator', 'tensorflow_core', 'tensorflow_core.python', 'tensorflow_core.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow_core.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'imp', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.python.util', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow_core.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.util.tf_contextlib', 'tensorflow_core.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'pkg_resources', 'pkgutil', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow_core.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.framework.ops', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python.util.nest', 'tensorflow.python.framework.dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl', 'absl.app', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'glob', 'absl.command_name', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'absl.logging', 'getpass', 'absl.logging.converter', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow_core.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.framework.constant_op', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'uuid', 'ctypes.util', 'tensorflow.python.framework.config', 'tensorflow.python.client', 'tensorflow.python.client.client_lib', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.standard_ops', 'tensorflow_core.python.autograph', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'queue', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python.platform.gfile', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.sparse', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.func_graph', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.compiler', 'astor', 'astor.code_gen', 'astor.op_util', 'astor.node_util', 'astor.string_repr', 'astor.source_repr', 'astor.file_util', 'astor.tree_walk', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'tensorflow_core.compiler', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'http', 'http.client', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', 'ipaddress', '_ssl', 'nturl2path', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.python.tpu', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.ops.initializers_ns', 'tensorflow_core.python.keras', 'tensorflow.python.keras', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'multiprocessing.pool', 'multiprocessing.util', 'tarfile', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py.version', 'h5py.h5', '_cython_0_29_14', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.utils', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'array', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.saving.model_config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.saved_model.builder', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'brotli', 'brotli.brotli', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'urllib3.contrib.socks', 'socks', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.training_arrays', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', '_cython_0_29_20', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.engine.training_v2', 'tensorflow.python.keras.engine.training_v2_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.models', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'PIL', 'PIL._version', 'PIL.ImageEnhance', 'PIL.Image', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'PIL.ImageFilter', 'PIL.ImageStat', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.ops', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'fractions', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.moving_averages', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow_core._api', 'tensorflow._api.v1', 'tensorflow._api.v1.app', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow._api.v1.audio', 'tensorflow._api.v1.autograph', 'tensorflow._api.v1.autograph.experimental', 'tensorflow._api.v1.bitwise', 'tensorflow._api.v1.compat', 'tensorflow._api.v1.compat.v1', 'tensorflow._api.v1.compat.v1.app', 'tensorflow._api.v1.compat.v1.audio', 'tensorflow._api.v1.compat.v1.autograph', 'tensorflow._api.v1.compat.v1.autograph.experimental', 'tensorflow._api.v1.compat.v1.bitwise', 'tensorflow._api.v1.compat.v1.compat', 'tensorflow._api.v1.compat.v1.config', 'tensorflow._api.v1.compat.v1.config.experimental', 'tensorflow._api.v1.compat.v1.config.optimizer', 'tensorflow._api.v1.compat.v1.config.threading', 'tensorflow._api.v1.compat.v1.data', 'tensorflow._api.v1.compat.v1.data.experimental', 'tensorflow._api.v1.compat.v1.debugging', 'tensorflow._api.v1.compat.v1.distribute', 'tensorflow._api.v1.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v1.compat.v1.distribute.experimental', 'tensorflow._api.v1.compat.v1.distributions', 'tensorflow._api.v1.compat.v1.dtypes', 'tensorflow._api.v1.compat.v1.errors', 'tensorflow._api.v1.compat.v1.experimental', 'tensorflow._api.v1.compat.v1.feature_column', 'tensorflow._api.v1.compat.v1.gfile', 'tensorflow._api.v1.compat.v1.graph_util', 'tensorflow._api.v1.compat.v1.image', 'tensorflow._api.v1.compat.v1.initializers', 'tensorflow._api.v1.compat.v1.io', 'tensorflow._api.v1.compat.v1.io.gfile', 'tensorflow._api.v1.compat.v1.layers', 'tensorflow._api.v1.compat.v1.layers.experimental', 'tensorflow._api.v1.compat.v1.linalg', 'tensorflow._api.v1.compat.v1.lite', 'tensorflow._api.v1.compat.v1.lite.constants', 'tensorflow_core.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v1.compat.v1.lite.experimental', 'tensorflow._api.v1.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '4259f303abd9c6563476d3977e38810b', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.lite.python.convert', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v1.compat.v1.logging', 'tensorflow._api.v1.compat.v1.lookup', 'tensorflow._api.v1.compat.v1.lookup.experimental', 'tensorflow._api.v1.compat.v1.losses', 'tensorflow._api.v1.compat.v1.manip', 'tensorflow._api.v1.compat.v1.math', 'tensorflow._api.v1.compat.v1.metrics', 'tensorflow._api.v1.compat.v1.nest', 'tensorflow._api.v1.compat.v1.nn', 'tensorflow._api.v1.compat.v1.nn.rnn_cell', 'tensorflow._api.v1.compat.v1.profiler', 'tensorflow._api.v1.compat.v1.python_io', 'tensorflow._api.v1.compat.v1.quantization', 'tensorflow._api.v1.compat.v1.queue', 'tensorflow._api.v1.compat.v1.ragged', 'tensorflow._api.v1.compat.v1.random', 'tensorflow._api.v1.compat.v1.random.experimental', 'tensorflow._api.v1.compat.v1.raw_ops', 'tensorflow._api.v1.compat.v1.resource_loader', 'tensorflow._api.v1.compat.v1.saved_model', 'tensorflow._api.v1.compat.v1.saved_model.builder', 'tensorflow._api.v1.compat.v1.saved_model.constants', 'tensorflow._api.v1.compat.v1.saved_model.experimental', 'tensorflow._api.v1.compat.v1.saved_model.loader', 'tensorflow._api.v1.compat.v1.saved_model.main_op', 'tensorflow._api.v1.compat.v1.saved_model.signature_constants', 'tensorflow._api.v1.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v1.compat.v1.saved_model.tag_constants', 'tensorflow._api.v1.compat.v1.saved_model.utils', 'tensorflow._api.v1.compat.v1.sets', 'tensorflow._api.v1.compat.v1.signal', 'tensorflow._api.v1.compat.v1.sparse', 'tensorflow._api.v1.compat.v1.spectral', 'tensorflow._api.v1.compat.v1.strings', 'tensorflow._api.v1.compat.v1.summary', 'tensorflow._api.v1.compat.v1.sysconfig', 'tensorflow._api.v1.compat.v1.test', 'tensorflow._api.v1.compat.v1.tpu', 'tensorflow._api.v1.compat.v1.tpu.experimental', 'tensorflow._api.v1.compat.v1.train', 'tensorflow._api.v1.compat.v1.train.experimental', 'tensorflow._api.v1.compat.v1.train.queue_runner', 'tensorflow._api.v1.compat.v1.user_ops', 'tensorflow._api.v1.compat.v1.version', 'tensorflow._api.v1.compat.v1.xla', 'tensorflow._api.v1.compat.v1.xla.experimental', 'tensorflow_estimator', 'tensorflow_estimator._api', 'tensorflow_estimator._api.v1', 'tensorflow_estimator._api.v1.estimator', 'tensorflow_estimator._api.v1.estimator.experimental', 'tensorflow_estimator.python', 'tensorflow_estimator.python.estimator', 'tensorflow_estimator.python.estimator.canned', 'tensorflow_estimator.python.estimator.canned.dnn', 'tensorflow_estimator.python.estimator.estimator', 'tensorflow.python.distribute.estimator_training', 'tensorflow.python.training.evaluation', 'tensorflow.python.util.compat_internal', 'tensorflow_estimator.python.estimator.model_fn', 'tensorflow_estimator.python.estimator.mode_keys', 'tensorflow_estimator.python.estimator.run_config', 'tensorflow_estimator.python.estimator.util', 'tensorflow_estimator.python.estimator.export', 'tensorflow_estimator.python.estimator.export.export_lib', 'tensorflow_estimator.python.estimator.export.export', 'tensorflow_estimator.python.estimator.canned.head', 'tensorflow_estimator.python.estimator.canned.metric_keys', 'tensorflow_estimator.python.estimator.canned.prediction_keys', 'tensorflow_estimator.python.estimator.export.export_output', 'tensorflow_estimator.python.estimator.canned.optimizers', 'tensorflow_estimator.python.estimator.head', 'tensorflow_estimator.python.estimator.head.head_utils', 'tensorflow_estimator.python.estimator.head.binary_class_head', 'tensorflow_estimator.python.estimator.head.base_head', 'tensorflow_estimator.python.estimator.head.multi_class_head', 'tensorflow_estimator.python.estimator.head.regression_head', 'tensorflow_estimator.python.estimator.canned.kmeans', 'tensorflow.python.ops.clustering_ops', 'tensorflow.python.ops.gen_clustering_ops', 'tensorflow_estimator.python.estimator.canned.linear', 'tensorflow_estimator.python.estimator.canned.linear_optimizer', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils.sdca_ops', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils.sharded_mutable_dense_hashtable', 'tensorflow_estimator.python.estimator.early_stopping', 'tensorflow_estimator.python.estimator.hooks', 'tensorflow_estimator.python.estimator.hooks.hooks', 'tensorflow_estimator._api.v1.estimator.export', 'tensorflow_estimator._api.v1.estimator.inputs', 'tensorflow_estimator.python.estimator.inputs', 'tensorflow_estimator.python.estimator.inputs.numpy_io', 'tensorflow_estimator.python.estimator.inputs.queues', 'tensorflow_estimator.python.estimator.inputs.queues.feeding_functions', 'tensorflow_estimator.python.estimator.inputs.queues.feeding_queue_runner', 'tensorflow_estimator.python.estimator.inputs.pandas_io', 'tensorflow_estimator._api.v1.estimator.tpu', 'tensorflow_estimator._api.v1.estimator.tpu.experimental', 'tensorflow_estimator.python.estimator.tpu', 'tensorflow_estimator.python.estimator.tpu._tpu_estimator_embedding', 'tensorflow_estimator.python.estimator.tpu.tpu_config', 'tensorflow_estimator.python.estimator.tpu.util', 'tensorflow_estimator.python.estimator.tpu.tpu_estimator', 'tensorflow.core.protobuf.tpu.compilation_result_pb2', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.service', 'tensorflow.compiler.xla.service.hlo_pb2', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.functional', 'tensorflow.python.tpu.preempted_hook', 'tensorflow.python.tpu.session_support', 'tensorflow.python.tpu.tpu_embedding_gradient', 'tensorflow.python.tpu.tpu_feed', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.python.tpu.tpu_sharding', 'tensorflow_estimator.python.estimator.tpu.error_handling', 'tensorflow_estimator.python.estimator.tpu.iteration_count_estimator', 'tensorflow_estimator.python.estimator.tpu.tpu_context', 'tensorflow_estimator.python.estimator.canned.baseline', 'tensorflow_estimator.python.estimator.canned.boosted_trees', 'tensorflow.core.kernels', 'tensorflow.core.kernels.boosted_trees', 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2', 'tensorflow.python.ops.boosted_trees_ops', 'tensorflow_estimator.python.estimator.canned.boosted_trees_utils', 'tensorflow.python.ops.cond_v2', 'tensorflow_estimator.python.estimator.canned.dnn_linear_combined', 'tensorflow_estimator.python.estimator.canned.parsing_utils', 'tensorflow_estimator.python.estimator.exporter', 'tensorflow_estimator.python.estimator.gc', 'tensorflow_estimator.python.estimator.extenders', 'tensorflow_estimator.python.estimator.head.multi_head', 'tensorflow_estimator.python.estimator.head.multi_label_head', 'tensorflow_estimator.python.estimator.hooks.basic_session_run_hooks', 'tensorflow_estimator.python.estimator.hooks.session_run_hook', 'tensorflow_estimator.python.estimator.training', 'tensorflow_estimator.python.estimator.api', 'tensorflow_estimator.python.estimator.api._v1', 'tensorflow_estimator.python.estimator.api._v1.estimator', 'tensorflow_estimator.python.estimator.api._v1.estimator.experimental', 'tensorflow_estimator.python.estimator.api._v1.estimator.export', 'tensorflow_estimator.python.estimator.api._v1.estimator.inputs', 'tensorflow_estimator.python.estimator.api._v1.estimator.tpu', 'tensorflow_estimator.python.estimator.api._v1.estimator.tpu.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v1.compat.v2', 'tensorflow._api.v1.compat.v2.audio', 'tensorflow._api.v1.compat.v2.autograph', 'tensorflow._api.v1.compat.v2.autograph.experimental', 'tensorflow._api.v1.compat.v2.bitwise', 'tensorflow._api.v1.compat.v2.compat', 'tensorflow._api.v1.compat.v2.config', 'tensorflow._api.v1.compat.v2.config.experimental', 'tensorflow._api.v1.compat.v2.config.optimizer', 'tensorflow._api.v1.compat.v2.config.threading', 'tensorflow._api.v1.compat.v2.data', 'tensorflow._api.v1.compat.v2.data.experimental', 'tensorflow._api.v1.compat.v2.debugging', 'tensorflow._api.v1.compat.v2.distribute', 'tensorflow._api.v1.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v1.compat.v2.distribute.experimental', 'tensorflow._api.v1.compat.v2.dtypes', 'tensorflow._api.v1.compat.v2.errors', 'tensorflow._api.v1.compat.v2.experimental', 'tensorflow._api.v1.compat.v2.feature_column', 'tensorflow._api.v1.compat.v2.graph_util', 'tensorflow._api.v1.compat.v2.image', 'tensorflow._api.v1.compat.v2.io', 'tensorflow._api.v1.compat.v2.io.gfile', 'tensorflow._api.v1.compat.v2.linalg', 'tensorflow._api.v1.compat.v2.lite', 'tensorflow._api.v1.compat.v2.lite.experimental', 'tensorflow._api.v1.compat.v2.lookup', 'tensorflow._api.v1.compat.v2.lookup.experimental', 'tensorflow._api.v1.compat.v2.math', 'tensorflow._api.v1.compat.v2.nest', 'tensorflow._api.v1.compat.v2.nn', 'tensorflow._api.v1.compat.v2.quantization', 'tensorflow._api.v1.compat.v2.queue', 'tensorflow._api.v1.compat.v2.ragged', 'tensorflow._api.v1.compat.v2.random', 'tensorflow._api.v1.compat.v2.random.experimental', 'tensorflow._api.v1.compat.v2.raw_ops', 'tensorflow._api.v1.compat.v2.saved_model', 'tensorflow._api.v1.compat.v2.sets', 'tensorflow._api.v1.compat.v2.signal', 'tensorflow._api.v1.compat.v2.sparse', 'tensorflow._api.v1.compat.v2.strings', 'tensorflow._api.v1.compat.v2.summary', 'tensorflow._api.v1.compat.v2.summary.experimental', 'tensorflow._api.v1.compat.v2.sysconfig', 'tensorflow._api.v1.compat.v2.test', 'tensorflow._api.v1.compat.v2.tpu', 'tensorflow._api.v1.compat.v2.tpu.experimental', 'tensorflow._api.v1.compat.v2.train', 'tensorflow._api.v1.compat.v2.train.experimental', 'tensorflow._api.v1.compat.v2.version', 'tensorflow._api.v1.compat.v2.xla', 'tensorflow._api.v1.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow_estimator.python.estimator.api._v2', 'tensorflow_estimator.python.estimator.api._v2.estimator', 'tensorflow_estimator.python.estimator.api._v2.estimator.experimental', 'tensorflow_estimator.python.estimator.canned.rnn', 'tensorflow_estimator.python.estimator.head.sequential_head', 'tensorflow_estimator.python.estimator.api._v2.estimator.export', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v1.config', 'tensorflow._api.v1.config.experimental', 'tensorflow._api.v1.config.optimizer', 'tensorflow._api.v1.config.threading', 'tensorflow._api.v1.data', 'tensorflow._api.v1.data.experimental', 'tensorflow._api.v1.debugging', 'tensorflow._api.v1.distribute', 'tensorflow._api.v1.distribute.cluster_resolver', 'tensorflow._api.v1.distribute.experimental', 'tensorflow._api.v1.distributions', 'tensorflow._api.v1.dtypes', 'tensorflow._api.v1.errors', 'tensorflow._api.v1.experimental', 'tensorflow._api.v1.feature_column', 'tensorflow._api.v1.gfile', 'tensorflow._api.v1.graph_util', 'tensorflow._api.v1.image', 'tensorflow._api.v1.initializers', 'tensorflow._api.v1.io', 'tensorflow._api.v1.io.gfile', 'tensorflow._api.v1.layers', 'tensorflow._api.v1.layers.experimental', 'tensorflow._api.v1.linalg', 'tensorflow._api.v1.lite', 'tensorflow._api.v1.lite.constants', 'tensorflow._api.v1.lite.experimental', 'tensorflow._api.v1.lite.experimental.nn', 'tensorflow._api.v1.logging', 'tensorflow._api.v1.lookup', 'tensorflow._api.v1.lookup.experimental', 'tensorflow._api.v1.losses', 'tensorflow._api.v1.manip', 'tensorflow._api.v1.math', 'tensorflow._api.v1.metrics', 'tensorflow._api.v1.nest', 'tensorflow._api.v1.nn', 'tensorflow._api.v1.nn.rnn_cell', 'tensorflow._api.v1.profiler', 'tensorflow._api.v1.python_io', 'tensorflow._api.v1.quantization', 'tensorflow._api.v1.queue', 'tensorflow._api.v1.ragged', 'tensorflow._api.v1.random', 'tensorflow._api.v1.random.experimental', 'tensorflow._api.v1.raw_ops', 'tensorflow._api.v1.resource_loader', 'tensorflow._api.v1.saved_model', 'tensorflow._api.v1.saved_model.builder', 'tensorflow._api.v1.saved_model.constants', 'tensorflow._api.v1.saved_model.experimental', 'tensorflow._api.v1.saved_model.loader', 'tensorflow._api.v1.saved_model.main_op', 'tensorflow._api.v1.saved_model.signature_constants', 'tensorflow._api.v1.saved_model.signature_def_utils', 'tensorflow._api.v1.saved_model.tag_constants', 'tensorflow._api.v1.saved_model.utils', 'tensorflow._api.v1.sets', 'tensorflow._api.v1.signal', 'tensorflow._api.v1.sparse', 'tensorflow._api.v1.spectral', 'tensorflow._api.v1.strings', 'tensorflow._api.v1.summary', 'tensorflow._api.v1.sysconfig', 'tensorflow._api.v1.test', 'tensorflow._api.v1.tpu', 'tensorflow._api.v1.tpu.experimental', 'tensorflow._api.v1.train', 'tensorflow._api.v1.train.experimental', 'tensorflow._api.v1.train.queue_runner', 'tensorflow._api.v1.user_ops', 'tensorflow._api.v1.version', 'tensorflow._api.v1.xla', 'tensorflow._api.v1.xla.experimental', 'tensorflow.python.util.deprecation_wrapper', 'tensorflow_core.keras', 'tensorflow.keras.models', 'tensorflow.keras.layers', 'tensorflow.keras.optimizers', 'tensorflow.keras.backend', 'visualizer', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
CACHEDIR=C:\Users\poop4\.matplotlib
Using fontManager instance from C:\Users\poop4\.matplotlib\fontlist-v310.json
Loaded backend qt5agg version unknown.
Loaded backend qt5agg version unknown.
Loaded backend Qt5Agg version unknown.
Loaded backend agg version unknown.
From C:\Users\poop4\Anaconda3\envs\test_tensor\lib\site-packages\tensorflow_core\python\keras\initializers.py:143: calling RandomNormal.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
From C:\Users\poop4\Anaconda3\envs\test_tensor\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
From C:\Users\poop4\Anaconda3\envs\test_tensor\lib\site-packages\tensorflow_core\python\ops\nn_impl.py:183: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
[005930] RL:a2c Net:lstm LR:0.001 DF:0.9 TU:[1,19] DRT:0.05
[005930][Epoch 001/100] Epsilon:1.0000 #Expl.:239/239 #Buy:86 #Sell:39 #Hold:114 #Stocks:257 PV:13,140,128 LC:12 Loss:43.413326 ET:23.7475
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'MJemokGothic' (MK.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'HyhwpEQ' (HYHWPEQ.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal demibold normal>) = 10.24
findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NewJumja' (JUMJA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Batang ExtB' (HANBatangExtBB.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'MBatang' (MT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Batang' (HANBatangB.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'MJemokBatang' (MB.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal demi normal>) = 11.24
findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 7.8986363636363635
findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'MSugiJeong' (MN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal demibold normal>) = 10.24
findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal demibold normal>) = 11.24
findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'MHunmin' (MH.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal regular normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal bold condensed>) = 11.535
findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'HCR Dotum' (HANDotumB.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal heavy normal>) = 10.43
findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal demibold normal>) = 11.24
findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal demibold normal>) = 11.24
findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal roman normal>) = 10.145
findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'NanumGothic' (.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumGothic' (EXTRABOLD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'MSugiHeulim' (MP.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Batang' (HANBatang.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal black normal>) = 11.525
findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal heavy normal>) = 11.43
findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'HCR Batang ExtB' (HANBatangExtB.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Dotum Ext' (HANDotumExt.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'TeamViewer14' (teamviewer14.otf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal black normal>) = 10.525
findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal regular normal>) = 10.05
findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal black normal>) = 10.525
findfont: score(<Font 'HCR Dotum' (HANDotum.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal demi normal>) = 10.24
findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 6.8986363636363635
findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal demi normal>) = 10.24
findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal regular normal>) = 10.05
findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal black normal>) = 10.525
findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'NanumGothic' (BOLD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'MGungJeong' (MJ.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal roman normal>) = 10.145
findfont: score(<Font 'MGungHeulim' (MM.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal demi condensed>) = 10.44
findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal demi normal>) = 10.24
findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal medium condensed>) = 10.344999999999999
findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'MDotum' (MG.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Batang Ext' (HANBatangExt.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\poop4\\Anaconda3\\envs\\test_tensor\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'MJemokGothic' (MK.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'HyhwpEQ' (HYHWPEQ.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal demibold normal>) = 10.24
findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NewJumja' (JUMJA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Batang ExtB' (HANBatangExtBB.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'MBatang' (MT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Batang' (HANBatangB.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'MJemokBatang' (MB.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal demi normal>) = 11.24
findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 7.8986363636363635
findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'MSugiJeong' (MN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal demibold normal>) = 10.24
findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal demibold normal>) = 11.24
findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'MHunmin' (MH.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal regular normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal bold condensed>) = 11.535
findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'HCR Dotum' (HANDotumB.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal heavy normal>) = 10.43
findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal demibold normal>) = 11.24
findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal demibold normal>) = 11.24
findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal roman normal>) = 10.145
findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'NanumGothic' (.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumGothic' (EXTRABOLD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'MSugiHeulim' (MP.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Batang' (HANBatang.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal black normal>) = 11.525
findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal heavy normal>) = 11.43
findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'HCR Batang ExtB' (HANBatangExtB.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Dotum Ext' (HANDotumExt.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'TeamViewer14' (teamviewer14.otf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal black normal>) = 10.525
findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal regular normal>) = 10.05
findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal black normal>) = 10.525
findfont: score(<Font 'HCR Dotum' (HANDotum.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal demi normal>) = 10.24
findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 6.8986363636363635
findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal demi normal>) = 10.24
findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal regular normal>) = 10.05
findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal black normal>) = 10.525
findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'NanumGothic' (BOLD.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'MGungJeong' (MJ.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal light normal>) = 10.24
findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal roman normal>) = 10.145
findfont: score(<Font 'MGungHeulim' (MM.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal demi condensed>) = 10.44
findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal demi normal>) = 10.24
findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal medium normal>) = 10.145
findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal medium condensed>) = 10.344999999999999
findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal bold normal>) = 10.335
findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal book normal>) = 11.05
findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'MDotum' (MG.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'HCR Batang Ext' (HANBatangExt.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal bold normal>) = 11.335
findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\poop4\\Anaconda3\\envs\\test_tensor\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
[005930][Epoch 002/100] Epsilon:0.9899 #Expl.:237/239 #Buy:120 #Sell:95 #Hold:24 #Stocks:137 PV:11,397,060 LC:9 Loss:22.230894 ET:6.4238
[005930][Epoch 003/100] Epsilon:0.9798 #Expl.:235/239 #Buy:99 #Sell:66 #Hold:74 #Stocks:246 PV:12,568,765 LC:13 Loss:33.164704 ET:5.9730
[005930][Epoch 004/100] Epsilon:0.9697 #Expl.:234/239 #Buy:121 #Sell:99 #Hold:19 #Stocks:186 PV:11,655,484 LC:10 Loss:26.130056 ET:5.5760
[005930][Epoch 005/100] Epsilon:0.9596 #Expl.:231/239 #Buy:126 #Sell:109 #Hold:4 #Stocks:114 PV:10,776,129 LC:6 Loss:17.194044 ET:4.7812
[005930][Epoch 006/100] Epsilon:0.9495 #Expl.:224/239 #Buy:82 #Sell:49 #Hold:108 #Stocks:257 PV:13,143,665 LC:14 Loss:36.343143 ET:5.5182
[005930][Epoch 007/100] Epsilon:0.9394 #Expl.:225/239 #Buy:99 #Sell:64 #Hold:76 #Stocks:238 PV:12,710,032 LC:15 Loss:33.251932 ET:5.6748
[005930][Epoch 008/100] Epsilon:0.9293 #Expl.:222/239 #Buy:99 #Sell:66 #Hold:74 #Stocks:249 PV:13,223,838 LC:11 Loss:43.414281 ET:5.4833
[005930][Epoch 009/100] Epsilon:0.9192 #Expl.:219/239 #Buy:82 #Sell:45 #Hold:112 #Stocks:250 PV:12,764,805 LC:15 Loss:33.955216 ET:5.7716
[005930][Epoch 010/100] Epsilon:0.9091 #Expl.:224/239 #Buy:64 #Sell:28 #Hold:147 #Stocks:258 PV:13,203,880 LC:14 Loss:37.162269 ET:6.2054
[005930][Epoch 011/100] Epsilon:0.8990 #Expl.:216/239 #Buy:123 #Sell:106 #Hold:10 #Stocks:93 PV:10,420,645 LC:5 Loss:11.778640 ET:5.8503
[005930][Epoch 012/100] Epsilon:0.8889 #Expl.:220/239 #Buy:125 #Sell:113 #Hold:1 #Stocks:25 PV:11,084,789 LC:3 Loss:19.291408 ET:6.5984
[005930][Epoch 013/100] Epsilon:0.8788 #Expl.:211/239 #Buy:66 #Sell:30 #Hold:143 #Stocks:256 PV:13,075,698 LC:14 Loss:36.291983 ET:6.6043
[005930][Epoch 014/100] Epsilon:0.8687 #Expl.:209/239 #Buy:85 #Sell:43 #Hold:111 #Stocks:260 PV:13,265,899 LC:14 Loss:37.226280 ET:6.5016
[005930][Epoch 015/100] Epsilon:0.8586 #Expl.:198/239 #Buy:113 #Sell:79 #Hold:47 #Stocks:167 PV:12,430,395 LC:13 Loss:31.878054 ET:5.7915
[005930][Epoch 016/100] Epsilon:0.8485 #Expl.:212/239 #Buy:116 #Sell:81 #Hold:42 #Stocks:174 PV:11,783,251 LC:10 Loss:30.144687 ET:5.4704
[005930][Epoch 017/100] Epsilon:0.8384 #Expl.:204/239 #Buy:130 #Sell:88 #Hold:21 #Stocks:227 PV:11,692,213 LC:11 Loss:28.411274 ET:5.3617
[005930][Epoch 018/100] Epsilon:0.8283 #Expl.:207/239 #Buy:93 #Sell:42 #Hold:104 #Stocks:260 PV:13,270,949 LC:14 Loss:37.824542 ET:5.4464
[005930][Epoch 019/100] Epsilon:0.8182 #Expl.:194/239 #Buy:112 #Sell:59 #Hold:68 #Stocks:204 PV:12,991,891 LC:16 Loss:32.378482 ET:5.6220
[005930][Epoch 020/100] Epsilon:0.8081 #Expl.:195/239 #Buy:130 #Sell:97 #Hold:12 #Stocks:216 PV:11,235,555 LC:9 Loss:26.852129 ET:5.5721
[005930][Epoch 021/100] Epsilon:0.7980 #Expl.:196/239 #Buy:133 #Sell:97 #Hold:9 #Stocks:217 PV:12,103,840 LC:12 Loss:31.185319 ET:6.0468
[005930][Epoch 022/100] Epsilon:0.7879 #Expl.:183/239 #Buy:97 #Sell:95 #Hold:47 #Stocks:18 PV:10,064,387 LC:1 Loss:1.063453 ET:4.9049
[005930][Epoch 023/100] Epsilon:0.7778 #Expl.:176/239 #Buy:131 #Sell:94 #Hold:14 #Stocks:225 PV:12,018,739 LC:10 Loss:28.377974 ET:8.2230
[005930][Epoch 024/100] Epsilon:0.7677 #Expl.:182/239 #Buy:116 #Sell:115 #Hold:8 #Stocks:0 PV:10,402,175 LC:2 Loss:7.325132 ET:5.4534
[005930][Epoch 025/100] Epsilon:0.7576 #Expl.:186/239 #Buy:130 #Sell:89 #Hold:20 #Stocks:192 PV:12,516,444 LC:15 Loss:29.195869 ET:6.4567
[005930][Epoch 026/100] Epsilon:0.7475 #Expl.:179/239 #Buy:115 #Sell:114 #Hold:10 #Stocks:9 PV:10,197,199 LC:2 Loss:5.157778 ET:6.2951
[005930][Epoch 027/100] Epsilon:0.7374 #Expl.:169/239 #Buy:133 #Sell:103 #Hold:3 #Stocks:192 PV:11,408,669 LC:8 Loss:21.570817 ET:6.1376
[005930][Epoch 028/100] Epsilon:0.7273 #Expl.:171/239 #Buy:116 #Sell:72 #Hold:51 #Stocks:208 PV:12,695,844 LC:15 Loss:31.471790 ET:6.0089
[005930][Epoch 029/100] Epsilon:0.7172 #Expl.:181/239 #Buy:126 #Sell:113 #Hold:0 #Stocks:89 PV:10,477,228 LC:4 Loss:10.414317 ET:4.8740
[005930][Epoch 030/100] Epsilon:0.7071 #Expl.:169/239 #Buy:117 #Sell:69 #Hold:53 #Stocks:227 PV:12,624,026 LC:15 Loss:31.199346 ET:5.4604
[005930][Epoch 031/100] Epsilon:0.6970 #Expl.:152/239 #Buy:123 #Sell:115 #Hold:1 #Stocks:61 PV:10,959,538 LC:2 Loss:13.441998 ET:4.1708
[005930][Epoch 032/100] Epsilon:0.6869 #Expl.:158/239 #Buy:132 #Sell:94 #Hold:13 #Stocks:218 PV:12,322,998 LC:10 Loss:30.749290 ET:5.1243
[005930][Epoch 033/100] Epsilon:0.6768 #Expl.:163/239 #Buy:99 #Sell:97 #Hold:43 #Stocks:18 PV:10,111,920 LC:1 Loss:1.147949 ET:4.1818
[005930][Epoch 034/100] Epsilon:0.6667 #Expl.:156/239 #Buy:133 #Sell:106 #Hold:0 #Stocks:189 PV:11,543,781 LC:7 Loss:24.858764 ET:5.4015
[005930][Epoch 035/100] Epsilon:0.6566 #Expl.:156/239 #Buy:123 #Sell:115 #Hold:1 #Stocks:10 PV:11,606,761 LC:6 Loss:22.138845 ET:5.9032
[005930][Epoch 036/100] Epsilon:0.6465 #Expl.:158/239 #Buy:126 #Sell:109 #Hold:4 #Stocks:102 PV:11,027,293 LC:9 Loss:20.463396 ET:6.2024
[005930][Epoch 037/100] Epsilon:0.6364 #Expl.:146/239 #Buy:106 #Sell:105 #Hold:28 #Stocks:0 PV:9,929,409 LC:1 Loss:2.284390 ET:4.7503
[005930][Epoch 038/100] Epsilon:0.6263 #Expl.:152/239 #Buy:133 #Sell:98 #Hold:8 #Stocks:216 PV:11,799,571 LC:9 Loss:24.905870 ET:5.2330
[005930][Epoch 039/100] Epsilon:0.6162 #Expl.:142/239 #Buy:134 #Sell:96 #Hold:9 #Stocks:232 PV:11,843,350 LC:12 Loss:26.771112 ET:5.2769
[005930][Epoch 040/100] Epsilon:0.6061 #Expl.:134/239 #Buy:126 #Sell:112 #Hold:1 #Stocks:112 PV:9,957,474 LC:1 Loss:1.990326 ET:3.8906
[005930][Epoch 041/100] Epsilon:0.5960 #Expl.:144/239 #Buy:121 #Sell:116 #Hold:2 #Stocks:22 PV:10,686,522 LC:4 Loss:10.824841 ET:4.3015
[005930][Epoch 042/100] Epsilon:0.5859 #Expl.:138/239 #Buy:115 #Sell:110 #Hold:14 #Stocks:28 PV:10,186,475 LC:2 Loss:5.638934 ET:3.9105
[005930][Epoch 043/100] Epsilon:0.5758 #Expl.:138/239 #Buy:120 #Sell:102 #Hold:17 #Stocks:145 PV:10,336,949 LC:3 Loss:11.712926 ET:4.1389
[005930][Epoch 044/100] Epsilon:0.5657 #Expl.:135/239 #Buy:94 #Sell:94 #Hold:51 #Stocks:0 PV:9,743,973 LC:1 Loss:3.791390 ET:3.9624
[005930][Epoch 045/100] Epsilon:0.5556 #Expl.:121/239 #Buy:83 #Sell:83 #Hold:73 #Stocks:0 PV:9,855,413 LC:1 Loss:1.741197 ET:3.9784
[005930][Epoch 046/100] Epsilon:0.5455 #Expl.:144/239 #Buy:133 #Sell:102 #Hold:4 #Stocks:193 PV:11,405,099 LC:8 Loss:23.674197 ET:5.1123
[005930][Epoch 047/100] Epsilon:0.5354 #Expl.:134/239 #Buy:85 #Sell:85 #Hold:69 #Stocks:0 PV:9,971,109 LC:1 Loss:1.969664 ET:4.3843
[005930][Epoch 048/100] Epsilon:0.5253 #Expl.:139/239 #Buy:92 #Sell:92 #Hold:55 #Stocks:0 PV:9,717,008 LC:1 Loss:8.318019 ET:4.6207
[005930][Epoch 049/100] Epsilon:0.5152 #Expl.:134/239 #Buy:105 #Sell:105 #Hold:29 #Stocks:0 PV:10,087,249 LC:1 Loss:1.509639 ET:5.0335
[005930][Epoch 050/100] Epsilon:0.5051 #Expl.:114/239 #Buy:124 #Sell:114 #Hold:1 #Stocks:57 PV:10,183,310 LC:2 Loss:6.504437 ET:5.0555
[005930][Epoch 051/100] Epsilon:0.4949 #Expl.:125/239 #Buy:103 #Sell:90 #Hold:46 #Stocks:102 PV:9,437,532 LC:2 Loss:12.617328 ET:4.6655
[005930][Epoch 052/100] Epsilon:0.4848 #Expl.:127/239 #Buy:105 #Sell:103 #Hold:31 #Stocks:18 PV:9,425,974 LC:2 Loss:15.456049 ET:4.2765
[005930][Epoch 053/100] Epsilon:0.4747 #Expl.:121/239 #Buy:125 #Sell:110 #Hold:4 #Stocks:96 PV:10,369,399 LC:6 Loss:10.463818 ET:4.5050
[005930][Epoch 054/100] Epsilon:0.4646 #Expl.:107/239 #Buy:118 #Sell:112 #Hold:9 #Stocks:19 PV:9,966,897 LC:4 Loss:8.111147 ET:4.1339
[005930][Epoch 055/100] Epsilon:0.4545 #Expl.:109/239 #Buy:97 #Sell:95 #Hold:47 #Stocks:7 PV:9,562,865 LC:2 Loss:12.264876 ET:4.0043
[005930][Epoch 056/100] Epsilon:0.4444 #Expl.:109/239 #Buy:119 #Sell:112 #Hold:8 #Stocks:36 PV:9,883,657 LC:1 Loss:6.505748 ET:4.0103
[005930][Epoch 057/100] Epsilon:0.4343 #Expl.:87/239 #Buy:101 #Sell:95 #Hold:43 #Stocks:22 PV:9,115,340 LC:2 Loss:26.810876 ET:4.2117
[005930][Epoch 058/100] Epsilon:0.4242 #Expl.:101/239 #Buy:92 #Sell:90 #Hold:57 #Stocks:0 PV:9,677,144 LC:2 Loss:12.128858 ET:4.3803
[005930][Epoch 059/100] Epsilon:0.4141 #Expl.:92/239 #Buy:100 #Sell:99 #Hold:40 #Stocks:0 PV:9,846,928 LC:1 Loss:4.990700 ET:4.6017
[005930][Epoch 060/100] Epsilon:0.4040 #Expl.:90/239 #Buy:92 #Sell:91 #Hold:56 #Stocks:0 PV:9,422,030 LC:2 Loss:16.703093 ET:4.7204
[005930][Epoch 061/100] Epsilon:0.3939 #Expl.:101/239 #Buy:103 #Sell:102 #Hold:34 #Stocks:0 PV:9,610,501 LC:1 Loss:10.130371 ET:5.6599
[005930][Epoch 062/100] Epsilon:0.3838 #Expl.:87/239 #Buy:96 #Sell:93 #Hold:50 #Stocks:18 PV:9,409,964 LC:2 Loss:19.342453 ET:6.3101
[005930][Epoch 063/100] Epsilon:0.3737 #Expl.:93/239 #Buy:78 #Sell:77 #Hold:84 #Stocks:9 PV:9,576,085 LC:1 Loss:8.147144 ET:4.6545
[005930][Epoch 064/100] Epsilon:0.3636 #Expl.:73/239 #Buy:75 #Sell:74 #Hold:90 #Stocks:9 PV:9,484,839 LC:2 Loss:12.249561 ET:5.5143
[005930][Epoch 065/100] Epsilon:0.3535 #Expl.:84/239 #Buy:68 #Sell:68 #Hold:103 #Stocks:0 PV:9,480,725 LC:2 Loss:11.208597 ET:4.2217
[005930][Epoch 066/100] Epsilon:0.3434 #Expl.:76/239 #Buy:76 #Sell:75 #Hold:88 #Stocks:0 PV:9,405,772 LC:2 Loss:12.492828 ET:4.1928
[005930][Epoch 067/100] Epsilon:0.3333 #Expl.:100/239 #Buy:66 #Sell:66 #Hold:107 #Stocks:0 PV:9,831,403 LC:1 Loss:1.962967 ET:3.9105
[005930][Epoch 068/100] Epsilon:0.3232 #Expl.:89/239 #Buy:72 #Sell:72 #Hold:95 #Stocks:0 PV:9,583,873 LC:1 Loss:8.767953 ET:3.9305
[005930][Epoch 069/100] Epsilon:0.3131 #Expl.:72/239 #Buy:75 #Sell:75 #Hold:89 #Stocks:0 PV:9,798,171 LC:1 Loss:5.615474 ET:3.9215
[005930][Epoch 070/100] Epsilon:0.3030 #Expl.:80/239 #Buy:89 #Sell:83 #Hold:67 #Stocks:35 PV:9,382,284 LC:2 Loss:13.657812 ET:4.2157
[005930][Epoch 071/100] Epsilon:0.2929 #Expl.:73/239 #Buy:84 #Sell:82 #Hold:73 #Stocks:0 PV:9,483,009 LC:2 Loss:15.910272 ET:4.5329
[005930][Epoch 072/100] Epsilon:0.2828 #Expl.:61/239 #Buy:80 #Sell:80 #Hold:79 #Stocks:0 PV:9,438,504 LC:2 Loss:17.365620 ET:4.7912
[005930][Epoch 073/100] Epsilon:0.2727 #Expl.:70/239 #Buy:85 #Sell:85 #Hold:69 #Stocks:0 PV:9,502,301 LC:2 Loss:13.799111 ET:5.1522
[005930][Epoch 074/100] Epsilon:0.2626 #Expl.:70/239 #Buy:71 #Sell:71 #Hold:97 #Stocks:0 PV:9,617,562 LC:1 Loss:9.538941 ET:5.1642
[005930][Epoch 075/100] Epsilon:0.2525 #Expl.:58/239 #Buy:67 #Sell:67 #Hold:105 #Stocks:0 PV:9,442,359 LC:2 Loss:16.644252 ET:5.0265
[005930][Epoch 076/100] Epsilon:0.2424 #Expl.:56/239 #Buy:57 #Sell:57 #Hold:125 #Stocks:0 PV:9,779,182 LC:1 Loss:3.614239 ET:4.3165
[005930][Epoch 077/100] Epsilon:0.2323 #Expl.:57/239 #Buy:85 #Sell:84 #Hold:70 #Stocks:0 PV:9,593,290 LC:1 Loss:9.733455 ET:4.0003
[005930][Epoch 078/100] Epsilon:0.2222 #Expl.:62/239 #Buy:92 #Sell:91 #Hold:56 #Stocks:0 PV:9,408,386 LC:2 Loss:18.065198 ET:4.1100
[005930][Epoch 079/100] Epsilon:0.2121 #Expl.:52/239 #Buy:81 #Sell:80 #Hold:78 #Stocks:9 PV:9,390,194 LC:2 Loss:18.270473 ET:4.1300
[005930][Epoch 080/100] Epsilon:0.2020 #Expl.:50/239 #Buy:64 #Sell:64 #Hold:111 #Stocks:0 PV:9,659,094 LC:1 Loss:7.040158 ET:3.9345
[005930][Epoch 081/100] Epsilon:0.1919 #Expl.:45/239 #Buy:70 #Sell:69 #Hold:100 #Stocks:0 PV:9,290,844 LC:2 Loss:16.905881 ET:4.4401
[005930][Epoch 082/100] Epsilon:0.1818 #Expl.:41/239 #Buy:63 #Sell:63 #Hold:113 #Stocks:0 PV:9,337,337 LC:2 Loss:18.660035 ET:4.3893
[005930][Epoch 083/100] Epsilon:0.1717 #Expl.:28/239 #Buy:51 #Sell:51 #Hold:137 #Stocks:0 PV:9,554,411 LC:1 Loss:8.823835 ET:4.1977
[005930][Epoch 084/100] Epsilon:0.1616 #Expl.:37/239 #Buy:67 #Sell:67 #Hold:105 #Stocks:0 PV:9,348,235 LC:2 Loss:16.881061 ET:5.0724
[005930][Epoch 085/100] Epsilon:0.1515 #Expl.:36/239 #Buy:64 #Sell:64 #Hold:111 #Stocks:0 PV:9,361,398 LC:2 Loss:15.402941 ET:4.5588
[005930][Epoch 086/100] Epsilon:0.1414 #Expl.:31/239 #Buy:67 #Sell:67 #Hold:105 #Stocks:0 PV:9,391,622 LC:2 Loss:15.990058 ET:4.5279
[005930][Epoch 087/100] Epsilon:0.1313 #Expl.:27/239 #Buy:51 #Sell:51 #Hold:137 #Stocks:0 PV:9,547,895 LC:1 Loss:11.074953 ET:4.3573
[005930][Epoch 088/100] Epsilon:0.1212 #Expl.:32/239 #Buy:52 #Sell:52 #Hold:135 #Stocks:0 PV:9,541,181 LC:1 Loss:11.253371 ET:4.5498
[005930][Epoch 089/100] Epsilon:0.1111 #Expl.:31/239 #Buy:64 #Sell:63 #Hold:112 #Stocks:9 PV:9,278,623 LC:2 Loss:18.751196 ET:4.7692
[005930][Epoch 090/100] Epsilon:0.1010 #Expl.:28/239 #Buy:69 #Sell:69 #Hold:101 #Stocks:0 PV:9,440,091 LC:2 Loss:16.194492 ET:4.6366
[005930][Epoch 091/100] Epsilon:0.0909 #Expl.:25/239 #Buy:59 #Sell:59 #Hold:121 #Stocks:0 PV:9,376,987 LC:2 Loss:16.276056 ET:4.1259
[005930][Epoch 092/100] Epsilon:0.0808 #Expl.:20/239 #Buy:53 #Sell:53 #Hold:133 #Stocks:0 PV:9,543,467 LC:1 Loss:11.760082 ET:3.7679
[005930][Epoch 093/100] Epsilon:0.0707 #Expl.:22/239 #Buy:54 #Sell:53 #Hold:132 #Stocks:0 PV:9,338,500 LC:2 Loss:16.354467 ET:4.2377
[005930][Epoch 094/100] Epsilon:0.0606 #Expl.:15/239 #Buy:55 #Sell:55 #Hold:129 #Stocks:0 PV:9,361,353 LC:2 Loss:15.728476 ET:4.4571
[005930][Epoch 095/100] Epsilon:0.0505 #Expl.:15/239 #Buy:52 #Sell:52 #Hold:135 #Stocks:0 PV:9,438,022 LC:2 Loss:15.055858 ET:4.7084
[005930][Epoch 096/100] Epsilon:0.0404 #Expl.:9/239 #Buy:48 #Sell:48 #Hold:143 #Stocks:0 PV:9,531,064 LC:1 Loss:11.370507 ET:4.3195
[005930][Epoch 097/100] Epsilon:0.0303 #Expl.:8/239 #Buy:49 #Sell:49 #Hold:141 #Stocks:0 PV:9,477,732 LC:2 Loss:13.268279 ET:4.5199
[005930][Epoch 098/100] Epsilon:0.0202 #Expl.:3/239 #Buy:45 #Sell:45 #Hold:149 #Stocks:0 PV:9,415,851 LC:2 Loss:15.430788 ET:4.5144
[005930][Epoch 099/100] Epsilon:0.0101 #Expl.:3/239 #Buy:47 #Sell:47 #Hold:145 #Stocks:0 PV:9,423,941 LC:2 Loss:15.174789 ET:5.2439
[005930][Epoch 100/100] Epsilon:0.0000 #Expl.:0/239 #Buy:44 #Sell:44 #Hold:151 #Stocks:0 PV:9,431,333 LC:2 Loss:15.081967 ET:5.8573
[005930] Elapsed Time:740.4722 Max PV:13,270,949 #Win:45
